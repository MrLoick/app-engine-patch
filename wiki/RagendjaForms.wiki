#summary Utilities for handling forms in ragendja
#labels OnlyInRepo

= Module: ragendja.forms =

== Using !FormSets with !ModelForm ==

*This feature is only available in the repository.*

`FormSet`s can be used to automatically display data for other models that have a `ReferenceProperty` back to your parent model (or `SelfReferenceProperty`).

The easiest way to use a `FormSet` as part of a `ModelForm` is to add each !FormSet as a `FormSetField` and upgrade your `ModelForm` to a `FormWithSets`.  The `FormWithSets` handles rendering your `FormSets` and makes sure that everything loads and saves correctly.

{{{
class Person(db.Model):
    name = db.StringProperty(Required=True)
    class Meta:
        parent = db.SelfReferenceProperty(collection_name='children_set')

class PersonForm(forms.ModelForm):
    children = FormSetField(Person)

    class Meta:
        model = Person
PersonForm = FormWithSets(PersonForm)
}}}

You can use `PersonForm` as if it were a normal `ModelForm`.

Notice that if you define a property named `parent` it must appear in the Meta class, and not part of the standard property list.  Defining a parent property means that the Model will exist in the same Entity Set as it's parent.  This allows the datastore to save them as part of the same transaction. See [http://code.google.com/appengine/docs/datastore/keysandentitygroups.html#Entity_Groups_Ancestors_and_Paths Entity Groups] for more information.