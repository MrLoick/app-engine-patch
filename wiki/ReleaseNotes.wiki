#labels Featured
= Upcoming release (1.0?) =
What's planned:
 * support for all `django.contrib.auth` forms and views
 * optimized session backend with memcache
 * serialization support (json and python already work in the repo)
 * maybe: support for groups and permissions

= Release 0.8 (2008-10-12) =
 * automatic integration of [ZipPackages zip packages]
 * support for boto's SQS implementation
 * djangoforms patch, so you can use lazy translations for verbose_name in model fields
 * httplib workaround for headers that aren't strings (e.g., boto sets them)
 * fixed encodejs escaping in templates
 * you can directly set the value of a KeyReferenceProperty
 * added support for User instances with legacy MD5 hashes that don't have a salt (thank you, Curtis Thompson!)
 * fixed a bug that could rarely cause import errors

*IMPORTANT*: We've renamed ragendja.templatutils to ragendja.templatetags.ragendjatags, so it can be used like any other templatetags library. Please change your imports.

*NOTE*: The sample project now comes with a zipped Django package!

= Release 0.7 (2008-09-04) =
 * Django 1.0 support
 * added a sample project to get you started more easily
 * support for all generic views except for the `date_based` ones which can't be implemented efficiently with the datastore (i.e.: we support `simple.*`, `object_detail.*`, `create_update.*`)
 * `@staff_only` view decorator that renders `no_access.html` if `user.is_staff` is `False`
 * added variable that can be used to check whether we run on the dev_appserver or the real GAE production servers (`from appenginepatcher import on_production_server`)
 * limit number of results in `object_list` generic view to 300, so you won't have problems with timeouts
 * `httplib` should work with most recent SDK
 * `generate_key_name` utility function that allows for generating a `key_name` from a set of values (building a path-like string to uniquely identify an object by its `key_name`)
 * fixed unicode email support

*NOTE:* The `is_banned` field has been moved to the EmailUser model, so the default User is more compatible with Django.

= Release 0.6 (2008-08-15) =
 * `logging.debug` should work if `settings.DEBUG` is `True`
 * `GLOBALTAGS` work without having to import `ragendja.template` (i.e., generic views should be supported, too)
 * `httplib` also works with `manage.py shell`
 * updated code to be compatible with Django 1.0beta1 (sessions, db backend, signals)
 * PATH is searched for a google_appengine SDK installation, too
 * a few simplifications

*IMPORTANT:* This release requires Django 1.0beta1. The version jump (0.3.4 => 0.6) isn't due to new features. The previous version number simply didn't reflect the actual state of the project correctly.

= Release 0.3.4 (2008-07-31) =
 * Linux: added shebang to `manage.py`, so you can run it as an executable
 * Windows: the "Program Files" folder and system drive get chosen correctly
 * fixed httplib emulation (e.g., needed by boto)
 * removed custom cache backend
 * added `get_object_or_404()` and `get_list_or_404()` replacements to ragendja.dbutils
 * added `db_add()` function to ragendja.dbutils (only adds an entity if it didn't exist, yet)

*IMPORTANT:* This release is only compatible with Django 1.0alpha and above. You now have to use Django's memcached backend explicitly by adding this to your settings:
{{{
CACHE_BACKEND = 'memcached://'
}}}
The GettingStarted article has been updated with more details.

Also, we've updated the [Documentation documentation] a little bit, so please take a look!

= Release 0.3.3 (2008-07-15) =
 * fixed datastore access for `manage.py` commands

= Release 0.3.2 (2008-07-07) =
 * fixed `manage.py test`
 * [Profiling integrated profiler] (can be enabled in settings.py)

= Release 0.3.1 (2008-07-03) =
 * fixed bugs that prevented appenginepatch from working on production server

= Release 0.3 (2008-07-03) =
 * manage.py support
 * compatibility fixes in User model

*IMPORTANT:* Make sure that you use `DATABASE_ENGINE = 'appengine'` and add `'appenginepatcher'` to your `INSTALLED_APPS`.